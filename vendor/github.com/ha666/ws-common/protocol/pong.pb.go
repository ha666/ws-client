// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pong.proto

package protocol

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Pong struct {
	PongVal              string   `protobuf:"bytes,1,opt,name=pong_val,json=pongVal,proto3" json:"pong_val,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pong) Reset()         { *m = Pong{} }
func (m *Pong) String() string { return proto.CompactTextString(m) }
func (*Pong) ProtoMessage()    {}
func (*Pong) Descriptor() ([]byte, []int) {
	return fileDescriptor_6cd38c31e685b6f4, []int{0}
}

func (m *Pong) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pong.Unmarshal(m, b)
}
func (m *Pong) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pong.Marshal(b, m, deterministic)
}
func (m *Pong) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pong.Merge(m, src)
}
func (m *Pong) XXX_Size() int {
	return xxx_messageInfo_Pong.Size(m)
}
func (m *Pong) XXX_DiscardUnknown() {
	xxx_messageInfo_Pong.DiscardUnknown(m)
}

var xxx_messageInfo_Pong proto.InternalMessageInfo

func (m *Pong) GetPongVal() string {
	if m != nil {
		return m.PongVal
	}
	return ""
}

func init() {
	proto.RegisterType((*Pong)(nil), "protocol.Pong")
}

func init() { proto.RegisterFile("pong.proto", fileDescriptor_6cd38c31e685b6f4) }

var fileDescriptor_6cd38c31e685b6f4 = []byte{
	// 78 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0xc8, 0xcf, 0x4b,
	0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x00, 0x53, 0xc9, 0xf9, 0x39, 0x4a, 0x8a, 0x5c,
	0x2c, 0x01, 0xf9, 0x79, 0xe9, 0x42, 0x92, 0x5c, 0x1c, 0x20, 0xf9, 0xf8, 0xb2, 0xc4, 0x1c, 0x09,
	0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x76, 0x10, 0x3f, 0x2c, 0x31, 0x27, 0x89, 0x0d, 0xac, 0xd8,
	0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x59, 0x84, 0xf3, 0x9d, 0x41, 0x00, 0x00, 0x00,
}
